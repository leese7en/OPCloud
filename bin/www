#!/usr/bin/env node
/**
 * Module dependencies.
 */
var app = require('../app');
var session = require('../session');
var sharedsession = require("express-socket.io-session");
var debug = require('debug')('OPCloud4nodejs:server');
var sio = require('socket.io');
var http = require('http');
var port = normalizePort('80');
http.globalAgent.maxSockets = Infinity
app.set('port', port);
var server = http.createServer(app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
var io = sio.listen(server);
io.set('log level', 1);
// var webSocketServer = require('websocket').server;
// var ws = new webSocketServer({
//     httpServer: server
// });
//
// wsServer.socketOn(ws);

function normalizePort(val) {
    var port = parseInt(val, 10);
    if (isNaN(port)) {

        return val;
    }
    if (port >= 0) {
        return port;
    }
    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    debug('Listening on ' + bind);
}